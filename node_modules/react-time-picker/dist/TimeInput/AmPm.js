'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _mergeClassNames = require('merge-class-names');

var _mergeClassNames2 = _interopRequireDefault(_mergeClassNames);

var _dates = require('../shared/dates');

var _propTypes3 = require('../shared/propTypes');

var _utils = require('../shared/utils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var AmPm = function (_PureComponent) {
  _inherits(AmPm, _PureComponent);

  function AmPm() {
    _classCallCheck(this, AmPm);

    return _possibleConstructorReturn(this, (AmPm.__proto__ || Object.getPrototypeOf(AmPm)).apply(this, arguments));
  }

  _createClass(AmPm, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          className = _props.className,
          disabled = _props.disabled,
          itemRef = _props.itemRef,
          locale = _props.locale,
          onChange = _props.onChange,
          required = _props.required,
          value = _props.value;


      var name = 'amPm';

      var _getAmPmLabels = (0, _utils.getAmPmLabels)(locale),
          _getAmPmLabels2 = _slicedToArray(_getAmPmLabels, 2),
          amLabel = _getAmPmLabels2[0],
          pmLabel = _getAmPmLabels2[1];

      return _react2.default.createElement(
        'select',
        {
          className: (0, _mergeClassNames2.default)(className + '__input', className + '__amPm'),
          disabled: disabled,
          name: name,
          onChange: onChange,
          ref: function ref(_ref) {
            if (itemRef) {
              itemRef(_ref, name);
            }
          },
          required: required,
          value: value !== null ? value : ''
        },
        !value && _react2.default.createElement(
          'option',
          { value: '' },
          '--'
        ),
        _react2.default.createElement(
          'option',
          { disabled: this.amDisabled, value: 'am' },
          amLabel
        ),
        _react2.default.createElement(
          'option',
          { disabled: this.pmDisabled, value: 'pm' },
          pmLabel
        )
      );
    }
  }, {
    key: 'amDisabled',
    get: function get() {
      var minTime = this.props.minTime;


      return minTime && (0, _dates.convert24to12)((0, _dates.getHours)(minTime))[1] === 'pm';
    }
  }, {
    key: 'pmDisabled',
    get: function get() {
      var maxTime = this.props.maxTime;


      return maxTime && (0, _dates.convert24to12)((0, _dates.getHours)(maxTime))[1] === 'am';
    }
  }]);

  return AmPm;
}(_react.PureComponent);

AmPm.propTypes = {
  className: _propTypes2.default.string.isRequired,
  disabled: _propTypes2.default.bool,
  itemRef: _propTypes2.default.func,
  locale: _propTypes2.default.string,
  maxTime: _propTypes3.isTime,
  minTime: _propTypes3.isTime,
  onChange: _propTypes2.default.func,
  required: _propTypes2.default.bool,
  value: _propTypes2.default.oneOf(['am', 'pm'])
};

exports.default = AmPm;